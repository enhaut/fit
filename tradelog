#!/bin/sh

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help()
{
  echo "Usage: tradelog [-h|--help] [FILTER] [COMMAND] [FILE [FILE [...]]]"
  echo "Filters:"
  echo "    -a DATETIME   records after the entered DATETIME (YYYY-MM-DD HH:MM:SS)"
  echo "    -b DATETIME   records before the entered DATETIME (YYYY-MM-DD HH:MM:SS)"
  echo "    -t TICKER     records matching tickers"
  echo "    -w WIDTH      sets width of graph"
  echo "Commands:"
  echo "    list-tick     prints list of all the tickers"
  echo "    profit        prints total profit"
  echo "    pos           prints opened positions sorted descending"
  echo "    last-price    prints last price for every ticker"
  echo "    hist-ord      prints histogram of the count of tickers"
  echo "    graph-pos     prints graph of positions of tickers"
  echo "  -h|--help       prints help"
}

DELIMITER="';'"

FILTERS=""
FILES=""
GRAPH_WIDTH=-1
COMMAND=""

check_date()
{
  if ! date -d "$1" 2> /dev/null 1> /dev/null; then  # TODO: check format of date
    echo "Invalid date format!"
    exit 1
  fi
}

add_to_filters()
{
  if [ -z "$FILTERS" ]; then
    FILTERS="$1"
  else
    FILTERS="$FILTERS | $1"
  fi
}

add_to_files()
{
  FILE_COMMAND=""
  case "$1" in
    *".gz")
      FILE_COMMAND="gunzip -c"
      ;;
    *)
      FILE_COMMAND="cat"
      ;;
  esac

  if [ -z "$FILES" ]; then
    FILES="$FILE_COMMAND $1"
  else
    FILES="$FILES ; $FILE_COMMAND $1"
  fi
}

while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|--help)
      print_help
      exit 0
      ;;
    -a)
      check_date "$2"
      add_to_filters "awk -F $DELIMITER '{if(\$1 > \"$2\") {print}}'"
      shift 2
      ;;
    -b)
      check_date "$2"
      add_to_filters "awk -F $DELIMITER '{if(\$1 < \"$2\") {print}}'"
      shift 2
      ;;
    -t)
      add_to_filters "awk -F $DELIMITER '{if(\$2 == \"$2\") {print}}'"
      shift 2
      ;;
    -w)
      if [ $GRAPH_WIDTH -ne "-1" ]; then
        echo "Width could be set only once!"
        exit 1
      elif [ "0" -ge "$2" ]; then
        echo "Width has to be > 0!"
        exit 1
      else
        GRAPH_WIDTH=$2
      fi
      shift 2
      ;;
    list-tick)
      COMMAND=""  # it is implemented as filter
      add_to_filters "awk -F $DELIMITER '{print \$2}'"
      shift
      ;;
    *)
      add_to_files "$1"
      shift
    ;;
  esac
done # set positional arguments in their proper place



echo "$FILTERS"
echo "log $FILES"
echo "wid: $GRAPH_WIDTH"

(eval "$FILES") | eval "$FILTERS" | cat
